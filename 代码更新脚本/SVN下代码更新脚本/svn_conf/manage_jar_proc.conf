
jar_proc_state(){
	JAR_LIKE=$1
	SSH=$2

	num=`ssh $SSH "ps -ef |grep java |grep -v grep |egrep '$JAR_LIKE'|wc -l"`
	if [ $num -gt 0 ];then
		return 1
	else
		return 0
	fi
}



function stop_jar_proc(){
	PROJECT_NAME=$1
	JAR_LIKE=$2

	Echo_Flash "stop $PROJECT_NAME ? [Y/N]"
	read ENTERSTOP
	case $ENTERSTOP in
	   y|Y|yes|Yes)
		jar_proc_state $JAR_LIKE $SSH
		if [ $? -eq 0 ];then
			Echo_Red "$PROJECT_NAME already down !"
		else
	     		Echo_Green "Stop $PROJECT_NAME now !"
      	 		ssh $SSH "ps -ef |grep java |grep -v grep |egrep '$JAR_LIKE' |awk '{print \$2}' |while read i ; do kill -9 \$i; done"
		        sleep 5
			jar_proc_state $JAR_LIKE $SSH	
			if [ "$?" -eq "0" ];then
       		         	Echo_Green "stop $PROJECT_NAME ok !"
   			else
       	        	 	Echo_Red "stop $PROJECT_NAME failed !"

		        fi
		fi
       		;;
	   *)
        	Echo_Red "exit stop..."
    		;;
	esac

}

function start_jar_proc(){
	PROJECT_NAME=$1
        JAR_LIKE=$2
	REMOTE=$3

	Echo_Flash "start $PROJECT_NAME ? [Y/N]"
	read ENTERSTOP
	case $ENTERSTOP in
	   y|Y|yes|Yes)
		jar_proc_state $JAR_LIKE $SSH
		if [ "$?" -eq "1" ];then
			Echo_Red "$PROJECT_NAME already running !"
		else
        		Echo_Green "Start $PROJECT_NAME now !"
			ssh $SSH "cd $REMOTE && sh start.sh $JAR_NAME > /dev/null 2>&1 &"
			sleep 5
			jar_proc_state $JAR_LIKE $SSH
			if [ "$?" -eq "1" ];then
                                Echo_Green "start $PROJECT_NAME ok !"
                        else
                                Echo_Red "start $PROJECT_NAME failed !"

                        fi
		fi

        ;;
   *)
        Echo_Red "exit restart..."
        ;;
esac
}



